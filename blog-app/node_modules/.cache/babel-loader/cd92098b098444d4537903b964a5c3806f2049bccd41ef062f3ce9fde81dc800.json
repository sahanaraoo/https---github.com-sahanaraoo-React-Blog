{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahan\\\\OneDrive\\\\Desktop\\\\blog-app\\\\blog-app\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from '@apollo/client';\nimport Header from '../../components/Home/Header';\nimport Searchbar from '../../components/Home/Searchbar';\nimport BlogList from '../../components/Home/BlogList';\nimport EmptyList from '../../components/common/EmptyList';\n\n// Create an Apollo Client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: `https://graphql.contentful.com/content/v1/spaces/lecsor65z6h5`,\n  cache: new InMemoryCache(),\n  headers: {\n    Authorization: `Bearer BfTZj7xc714fKGvPfg7qnA1ZhQh3up_qyWNjQn8Jj8M`\n  }\n});\n\n// Define your GraphQL query\nconst GET_BLOGS = gql`\n  query {\n    blogPostCollection {\n      items {\n        id\n        title\n        category\n        subCategory\n        description\n        authorName\n        authorAvatar\n        createdAt\n        cover {\n          file {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\nconst Home = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_BLOGS);\n  const [blogs, setBlogs] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  useEffect(() => {\n    if (data && data.blogPostCollection) {\n      setBlogs(data.blogPostCollection.items);\n    }\n  }, [data]);\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    handleSearchResults();\n  };\n  const handleSearchResults = () => {\n    const filteredBlogs = blogs.filter(blog => blog.category.toLowerCase().includes(searchKey.toLowerCase().trim()));\n    setBlogs(filteredBlogs);\n  };\n  const handleClearSearch = () => {\n    setBlogs(data.blogPostCollection.items);\n    setSearchKey('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n      value: searchKey,\n      clearSearch: handleClearSearch,\n      formSubmit: handleSearchSubmit,\n      handleSearchKey: e => setSearchKey(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !loading && !blogs.length ? /*#__PURE__*/_jsxDEV(EmptyList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"F3WEYupbtlnBscy1xQWcZp6K7UA=\", false, function () {\n  return [useQuery];\n});\n_c = Home;\nexport default (() => /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","Header","Searchbar","BlogList","EmptyList","jsxDEV","_jsxDEV","client","uri","cache","headers","Authorization","GET_BLOGS","Home","_s","loading","error","data","blogs","setBlogs","searchKey","setSearchKey","blogPostCollection","items","handleSearchSubmit","event","preventDefault","handleSearchResults","filteredBlogs","filter","blog","category","toLowerCase","includes","trim","handleClearSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","value","clearSearch","formSubmit","handleSearchKey","e","target","length","_c","$RefreshReg$"],"sources":["C:/Users/sahan/OneDrive/Desktop/blog-app/blog-app/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from '@apollo/client';\nimport Header from '../../components/Home/Header';\nimport Searchbar from '../../components/Home/Searchbar';\nimport BlogList from '../../components/Home/BlogList';\nimport EmptyList from '../../components/common/EmptyList';\n\n// Create an Apollo Client\nconst client = new ApolloClient({\n  uri: `https://graphql.contentful.com/content/v1/spaces/lecsor65z6h5`,\n  cache: new InMemoryCache(),\n  headers: {\n    Authorization: `Bearer BfTZj7xc714fKGvPfg7qnA1ZhQh3up_qyWNjQn8Jj8M`,\n  },\n});\n\n// Define your GraphQL query\nconst GET_BLOGS = gql`\n  query {\n    blogPostCollection {\n      items {\n        id\n        title\n        category\n        subCategory\n        description\n        authorName\n        authorAvatar\n        createdAt\n        cover {\n          file {\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Home = () => {\n  const { loading, error, data } = useQuery(GET_BLOGS);\n  const [blogs, setBlogs] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n\n  useEffect(() => {\n    if (data && data.blogPostCollection) {\n      setBlogs(data.blogPostCollection.items);\n    }\n  }, [data]);\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n    handleSearchResults();\n  };\n\n  const handleSearchResults = () => {\n    const filteredBlogs = blogs.filter((blog) =>\n      blog.category.toLowerCase().includes(searchKey.toLowerCase().trim())\n    );\n    setBlogs(filteredBlogs);\n  };\n\n  const handleClearSearch = () => {\n    setBlogs(data.blogPostCollection.items);\n    setSearchKey('');\n  };\n\n  return (\n    <div>\n      <Header />\n      <Searchbar\n        value={searchKey}\n        clearSearch={handleClearSearch}\n        formSubmit={handleSearchSubmit}\n        handleSearchKey={(e) => setSearchKey(e.target.value)}\n      />\n      {!loading && !blogs.length ? <EmptyList /> : <BlogList blogs={blogs} />}\n    </div>\n  );\n};\n\nexport default () => (\n  <ApolloProvider client={client}>\n    <Home />\n  </ApolloProvider>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}