{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahan\\\\OneDrive\\\\Desktop\\\\blog-app\\\\blog-app\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Home/Header';\nimport Searchbar from '../../components/Home/Searchbar';\nimport BlogList from '../../components/Home/BlogList';\nimport EmptyList from '../../components/common/EmptyList';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  const spaceId = 'your-contentful-space-id'; // Replace with your Contentful Space ID\n  const accessToken = 'your-contentful-access-token'; // Replace with your Contentful Access Token\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.post(`https://graphql.contentful.com/content/v1/spaces/${spaceId}`, {\n        query: `\n            {\n              blogPostCollection {\n                items {\n                  sys {\n                    id\n                  }\n                  title\n                  category\n                  subCategory\n                  description\n                  authorName\n                  authorAvatar\n                  createdAt\n                  cover {\n                    url\n                  }\n                }\n              }\n            }\n          `\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const fetchedBlogs = response.data.data.blogPostCollection.items.map(item => ({\n        id: item.sys.id,\n        title: item.title,\n        category: item.category,\n        subCategory: item.subCategory,\n        description: item.description,\n        authorName: item.authorName,\n        authorAvatar: item.authorAvatar,\n        createdAt: item.createdAt,\n        cover: item.cover.url\n      }));\n      setBlogs(fetchedBlogs);\n    } catch (error) {\n      console.error('Error fetching data from Contentful:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    handleSearchResults();\n  };\n  const handleSearchResults = () => {\n    const filteredBlogs = blogs.filter(blog => blog.category.toLowerCase().includes(searchKey.toLowerCase().trim()));\n    setBlogs(filteredBlogs);\n  };\n  const handleClearSearch = () => {\n    fetchData();\n    setSearchKey('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n      value: searchKey,\n      clearSearch: handleClearSearch,\n      formSubmit: handleSearchSubmit,\n      handleSearchKey: e => setSearchKey(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), !blogs.length ? /*#__PURE__*/_jsxDEV(EmptyList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"jUlx+j/R+lkrQHL755lrsroT6Ow=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","Searchbar","BlogList","EmptyList","axios","jsxDEV","_jsxDEV","Home","_s","blogs","setBlogs","searchKey","setSearchKey","spaceId","accessToken","fetchData","response","post","query","headers","Authorization","fetchedBlogs","data","blogPostCollection","items","map","item","id","sys","title","category","subCategory","description","authorName","authorAvatar","createdAt","cover","url","error","console","handleSearchSubmit","event","preventDefault","handleSearchResults","filteredBlogs","filter","blog","toLowerCase","includes","trim","handleClearSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","value","clearSearch","formSubmit","handleSearchKey","e","target","length","_c","$RefreshReg$"],"sources":["C:/Users/sahan/OneDrive/Desktop/blog-app/blog-app/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Home/Header';\nimport Searchbar from '../../components/Home/Searchbar';\nimport BlogList from '../../components/Home/BlogList';\nimport EmptyList from '../../components/common/EmptyList';\nimport axios from 'axios';\n\nconst Home = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n\n  const spaceId = 'your-contentful-space-id'; // Replace with your Contentful Space ID\n  const accessToken = 'your-contentful-access-token'; // Replace with your Contentful Access Token\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.post(\n        `https://graphql.contentful.com/content/v1/spaces/${spaceId}`,\n        {\n          query: `\n            {\n              blogPostCollection {\n                items {\n                  sys {\n                    id\n                  }\n                  title\n                  category\n                  subCategory\n                  description\n                  authorName\n                  authorAvatar\n                  createdAt\n                  cover {\n                    url\n                  }\n                }\n              }\n            }\n          `,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${accessToken}`,\n          },\n        }\n      );\n\n      const fetchedBlogs = response.data.data.blogPostCollection.items.map((item) => ({\n        id: item.sys.id,\n        title: item.title,\n        category: item.category,\n        subCategory: item.subCategory,\n        description: item.description,\n        authorName: item.authorName,\n        authorAvatar: item.authorAvatar,\n        createdAt: item.createdAt,\n        cover: item.cover.url,\n      }));\n\n      setBlogs(fetchedBlogs);\n    } catch (error) {\n      console.error('Error fetching data from Contentful:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n    handleSearchResults();\n  };\n\n  const handleSearchResults = () => {\n    const filteredBlogs = blogs.filter((blog) =>\n      blog.category.toLowerCase().includes(searchKey.toLowerCase().trim())\n    );\n    setBlogs(filteredBlogs);\n  };\n\n  const handleClearSearch = () => {\n    fetchData();\n    setSearchKey('');\n  };\n\n  return (\n    <div>\n      <Header />\n      <Searchbar\n        value={searchKey}\n        clearSearch={handleClearSearch}\n        formSubmit={handleSearchSubmit}\n        handleSearchKey={(e) => setSearchKey(e.target.value)}\n      />\n      {!blogs.length ? <EmptyList /> : <BlogList blogs={blogs} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}