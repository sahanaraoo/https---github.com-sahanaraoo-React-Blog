{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahan\\\\OneDrive\\\\Desktop\\\\blog-app\\\\blog-app\\\\src\\\\pages\\\\Home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../../components/Home/Header';\nimport Searchbar from '../../components/Home/Searchbar';\n// import BlogList from '../../components/Home/BlogList';\nimport EmptyList from '../../components/common/EmptyList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = ({\n  blogs\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogList-wrap\",\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: blog.cover,\n        alt: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Author: ${blog.authorName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Category: ${blog.category}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Created At: ${blog.createdAt}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = BlogList;\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n  const spaceId = 'lecsor65z6h5';\n  const accessToken = 'BfTZj7xc714fKGvPfg7qnA1ZhQh3up_qyWNjQn8Jj8M';\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`https://cdn.contentful.com/spaces/${spaceId}/entries?access_token=${accessToken}&content_type=first`);\n\n      // Check if the 'items' array exists in the response\n      const fetchedBlogs = response.data.items ? response.data.items.map(item => {\n        var _item$fields$cover, _item$fields$cover$fi, _item$fields$cover$fi2;\n        return {\n          id: item.sys.id,\n          title: item.fields.title,\n          category: item.fields.category,\n          subCategory: item.fields.subCategory,\n          description: item.fields.description,\n          authorName: item.fields.authorName,\n          authorAvatar: item.fields.authorAvatar,\n          createdAt: item.fields.createdAt,\n          cover: ((_item$fields$cover = item.fields.cover) === null || _item$fields$cover === void 0 ? void 0 : (_item$fields$cover$fi = _item$fields$cover.fields) === null || _item$fields$cover$fi === void 0 ? void 0 : (_item$fields$cover$fi2 = _item$fields$cover$fi.file) === null || _item$fields$cover$fi2 === void 0 ? void 0 : _item$fields$cover$fi2.url) || '' // Check if 'cover' and 'file' exist\n        };\n      }) : [];\n      setBlogs(fetchedBlogs);\n    } catch (error) {\n      console.error('Error fetching data from Contentful:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    handleSearchResults();\n  };\n  const handleSearchResults = () => {\n    // Implement your search logic based on the fetched blogs\n    // You can use the 'blogs' state for filtering\n    const filteredBlogs = blogs.filter(blog => blog.category.toLowerCase().includes(searchKey.toLowerCase().trim()));\n    setBlogs(filteredBlogs);\n  };\n  const handleClearSearch = () => {\n    // Reset to the original fetched blogs\n    fetchData();\n    setSearchKey('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n      value: searchKey,\n      clearSearch: handleClearSearch,\n      formSubmit: handleSearchSubmit,\n      handleSearchKey: e => setSearchKey(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), !blogs.length ? /*#__PURE__*/_jsxDEV(EmptyList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"jUlx+j/R+lkrQHL755lrsroT6Ow=\");\n_c2 = Home;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"BlogList\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Searchbar","EmptyList","jsxDEV","_jsxDEV","BlogList","blogs","className","children","map","blog","src","cover","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","description","authorName","category","createdAt","id","_c","Home","_s","setBlogs","searchKey","setSearchKey","spaceId","accessToken","fetchData","response","get","fetchedBlogs","data","items","item","_item$fields$cover","_item$fields$cover$fi","_item$fields$cover$fi2","sys","fields","subCategory","authorAvatar","file","url","error","console","handleSearchSubmit","event","preventDefault","handleSearchResults","filteredBlogs","filter","toLowerCase","includes","trim","handleClearSearch","value","clearSearch","formSubmit","handleSearchKey","e","target","length","_c2","$RefreshReg$"],"sources":["C:/Users/sahan/OneDrive/Desktop/blog-app/blog-app/src/pages/Home/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../../components/Home/Header';\nimport Searchbar from '../../components/Home/Searchbar';\n// import BlogList from '../../components/Home/BlogList';\nimport EmptyList from '../../components/common/EmptyList';\n\n\nconst BlogList = ({ blogs }) => {\n  return (\n    <div className=\"blogList-wrap\">\n      {blogs.map((blog) => (\n        <div key={blog.id} className=\"blog-item\">\n          <img src={blog.cover} alt={blog.title} />\n          <h3>{blog.title}</h3>\n          <p>{blog.description}</p>\n          <p>{`Author: ${blog.authorName}`}</p>\n          <p>{`Category: ${blog.category}`}</p>\n          <p>{`Created At: ${blog.createdAt}`}</p>\n       {/* <img src={blog.authorAvatar} alt={`Avatar of ${blog.authorName}`} /> */}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Home = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [searchKey, setSearchKey] = useState('');\n\n  const spaceId = 'lecsor65z6h5'; \n  const accessToken = 'BfTZj7xc714fKGvPfg7qnA1ZhQh3up_qyWNjQn8Jj8M'; \n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\n        `https://cdn.contentful.com/spaces/${spaceId}/entries?access_token=${accessToken}&content_type=first`\n      );\n  \n      // Check if the 'items' array exists in the response\n      const fetchedBlogs = response.data.items\n        ? response.data.items.map((item) => ({\n            id: item.sys.id,\n            title: item.fields.title,\n            category: item.fields.category,\n            subCategory: item.fields.subCategory,\n            description: item.fields.description,\n            authorName: item.fields.authorName,\n            authorAvatar: item.fields.authorAvatar,\n            createdAt: item.fields.createdAt,\n            cover: item.fields.cover?.fields?.file?.url || '', // Check if 'cover' and 'file' exist\n          }))\n        : [];\n  \n      setBlogs(fetchedBlogs);\n    } catch (error) {\n      console.error('Error fetching data from Contentful:', error);\n    }\n  };\n  \n  \n\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n    handleSearchResults();\n  };\n\n  const handleSearchResults = () => {\n    // Implement your search logic based on the fetched blogs\n    // You can use the 'blogs' state for filtering\n    const filteredBlogs = blogs.filter((blog) =>\n      blog.category.toLowerCase().includes(searchKey.toLowerCase().trim())\n    );\n    setBlogs(filteredBlogs);\n  };\n\n  const handleClearSearch = () => {\n    // Reset to the original fetched blogs\n    fetchData();\n    setSearchKey('');\n  };\n\n  return (\n    <div>\n      <Header />\n      <Searchbar\n        value={searchKey}\n        clearSearch={handleClearSearch}\n        formSubmit={handleSearchSubmit}\n        handleSearchKey={(e) => setSearchKey(e.target.value)}\n      />\n      {!blogs.length ? <EmptyList /> : <BlogList blogs={blogs} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,SAAS,MAAM,iCAAiC;AACvD;AACA,OAAOC,SAAS,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC9B,oBACEF,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BF,KAAK,CAACG,GAAG,CAAEC,IAAI,iBACdN,OAAA;MAAmBG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtCJ,OAAA;QAAKO,GAAG,EAAED,IAAI,CAACE,KAAM;QAACC,GAAG,EAAEH,IAAI,CAACI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCd,OAAA;QAAAI,QAAA,EAAKE,IAAI,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBd,OAAA;QAAAI,QAAA,EAAIE,IAAI,CAACS;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBd,OAAA;QAAAI,QAAA,EAAK,WAAUE,IAAI,CAACU,UAAW;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCd,OAAA;QAAAI,QAAA,EAAK,aAAYE,IAAI,CAACW,QAAS;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCd,OAAA;QAAAI,QAAA,EAAK,eAAcE,IAAI,CAACY,SAAU;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GANhCR,IAAI,CAACa,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GAhBInB,QAAQ;AAkBd,MAAMoB,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACpB,KAAK,EAAEqB,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMiC,OAAO,GAAG,cAAc;EAC9B,MAAMC,WAAW,GAAG,6CAA6C;EAEjE,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAC7B,qCAAoCJ,OAAQ,yBAAwBC,WAAY,qBACnF,CAAC;;MAED;MACA,MAAMI,YAAY,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK,GACpCJ,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC5B,GAAG,CAAE6B,IAAI;QAAA,IAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA;QAAA,OAAM;UACjClB,EAAE,EAAEe,IAAI,CAACI,GAAG,CAACnB,EAAE;UACfT,KAAK,EAAEwB,IAAI,CAACK,MAAM,CAAC7B,KAAK;UACxBO,QAAQ,EAAEiB,IAAI,CAACK,MAAM,CAACtB,QAAQ;UAC9BuB,WAAW,EAAEN,IAAI,CAACK,MAAM,CAACC,WAAW;UACpCzB,WAAW,EAAEmB,IAAI,CAACK,MAAM,CAACxB,WAAW;UACpCC,UAAU,EAAEkB,IAAI,CAACK,MAAM,CAACvB,UAAU;UAClCyB,YAAY,EAAEP,IAAI,CAACK,MAAM,CAACE,YAAY;UACtCvB,SAAS,EAAEgB,IAAI,CAACK,MAAM,CAACrB,SAAS;UAChCV,KAAK,EAAE,EAAA2B,kBAAA,GAAAD,IAAI,CAACK,MAAM,CAAC/B,KAAK,cAAA2B,kBAAA,wBAAAC,qBAAA,GAAjBD,kBAAA,CAAmBI,MAAM,cAAAH,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA2BM,IAAI,cAAAL,sBAAA,uBAA/BA,sBAAA,CAAiCM,GAAG,KAAI,EAAE,CAAE;QACrD,CAAC;MAAA,CAAC,CAAC,GACH,EAAE;MAENpB,QAAQ,CAACQ,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D;EACF,CAAC;EAIDlD,SAAS,CAAC,MAAM;IACdkC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMkB,kBAAkB,GAAIC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,mBAAmB,CAAC,CAAC;EACvB,CAAC;EAED,MAAMA,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA;IACA,MAAMC,aAAa,GAAGhD,KAAK,CAACiD,MAAM,CAAE7C,IAAI,IACtCA,IAAI,CAACW,QAAQ,CAACmC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7B,SAAS,CAAC4B,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CACrE,CAAC;IACD/B,QAAQ,CAAC2B,aAAa,CAAC;EACzB,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA3B,SAAS,CAAC,CAAC;IACXH,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACEzB,OAAA;IAAAI,QAAA,gBACEJ,OAAA,CAACJ,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVd,OAAA,CAACH,SAAS;MACR2D,KAAK,EAAEhC,SAAU;MACjBiC,WAAW,EAAEF,iBAAkB;MAC/BG,UAAU,EAAEZ,kBAAmB;MAC/Ba,eAAe,EAAGC,CAAC,IAAKnC,YAAY,CAACmC,CAAC,CAACC,MAAM,CAACL,KAAK;IAAE;MAAA7C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,EACD,CAACZ,KAAK,CAAC4D,MAAM,gBAAG9D,OAAA,CAACF,SAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGd,OAAA,CAACC,QAAQ;MAACC,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACQ,EAAA,CAxEID,IAAI;AAAA0C,GAAA,GAAJ1C,IAAI;AA0EV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAA2C,GAAA;AAAAC,YAAA,CAAA5C,EAAA;AAAA4C,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}